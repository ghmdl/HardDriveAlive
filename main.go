package main

import (
	"fmt"
	"io/ioutil"
	"strconv"
	"time"
)

func WriteToFile(txtFile, txtToWrite string) error {
	err := ioutil.WriteFile(txtFile, []byte(txtToWrite), 0644)
	if err != nil {
		fmt.Println("Error writing to file.", err)
	}
	return nil
}

func main() {
	var strInput string
	var intInput int
	txtFile := "HardDriveAlive.txt"
	fmt.Println("----------------------------\nWritten by MdL (github.com/ghmdl)\n----------------------------\n")
	fmt.Print("Specify a timer interval (in seconds) for writing to a file (e.g. 10): ")
	for {
		_, err := fmt.Scan(&strInput)
		intInput, err = strconv.Atoi(strInput)

		if err != nil || intInput < 0 {
			fmt.Printf("'%v' is an invalid input. Specify a valid positive number (integers only): ", strInput)
		} else {
			fmt.Println("\n----------------------------\nWriting to file every " + strconv.Itoa(intInput) + " second(s).\n----------------------------\n")
			ticker := time.NewTicker(time.Duration(intInput) * time.Second)
			for ; true; <-ticker.C {
				txtToWrite := "This file was generated by HardDriveAlive.\nLast write was on " + time.Now().Format(time.ANSIC)
				WriteToFile(txtFile, txtToWrite)
				fmt.Println("Writing... " + time.Now().Format(time.ANSIC))
			}
		}
	}
}
